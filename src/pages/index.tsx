import Head from "next/head";

import { collection, getDocs } from "firebase/firestore";
import { db } from "@/firebase/config";
import { Container, ListContainer } from "@/styles/pages/home";
import ProductCard from "@/components/ProductCard";
import ProductsCategory from "@/components/ProductsCategory";
import { GetStaticProps } from "next";
import { stripe } from "@/lib/stripe";
import Stripe from "stripe";

interface Product {
  id: string;
  title: string;
  price: number;
  imgUrl: string;
}
interface HomeProps {
  products: {
    id: string;
    title: string;
    price: number;
    imgUrl: string;
  }[];
}

export default function Home({ products }: HomeProps) {
  return (
    <>
      <Head>
        <title>Cosmetic shop | Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <ProductsCategory />
        <ListContainer>
          {products &&
            products.map((prod: Product, i) => {
              return (
                <ProductCard
                  key={i}
                  id={prod.id}
                  title={prod.title}
                  price={String(prod.price)}
                  imgUrl={prod.imgUrl}
                />
              );
            })}
        </ListContainer>
      </Container>
    </>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  const res = await stripe.products.list({
    expand: ["data.default_price"],
  });

  const products = res.data.map((product) => {
    const price = product.default_price as Stripe.Price;

    return {
      id: product.id,
      title: product.name,
      imgUrl: product.images[0],
      price: new Intl.NumberFormat("pt-BR", {
        style: "currency",
        currency: "BRL",
      }).format(price.unit_amount! / 100),
    };
  });

  return {
    props: {
      products,
    },
    revalidate: 60 * 60 * 2,
  };
};
